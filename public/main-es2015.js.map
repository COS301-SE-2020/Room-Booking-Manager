{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-meeting-room-info/add-meeting-room-info.component.ts","./src/app/add-meeting-room-info/add-meeting-room-info.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/classes/room.ts","./src/app/classes/user.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/edit-employee/edit-employee.component.ts","./src/app/edit-employee/edit-employee.component.html","./src/app/edit-meeting-room-info/edit-meeting-room-info.component.ts","./src/app/edit-meeting-room-info/edit-meeting-room-info.component.html","./src/app/employee-info/employee-info.component.ts","./src/app/employee-info/employee-info.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/material/material.module.ts","./src/app/meeting-info/meeting-info.component.ts","./src/app/meeting-info/meeting-info.component.html","./src/app/register-confirm/register-confirm.component.ts","./src/app/register-confirm/register-confirm.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/retrieve-meeting-room-info/retrieve-meeting-room-info.component.ts","./src/app/retrieve-meeting-room-info/retrieve-meeting-room-info.component.html","./src/app/services/api.service.ts","./src/app/services/employee.service.ts","./src/app/services/rooms.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {FormGroup,FormControl,Validators} from '@angular/forms';\r\nimport { apiService } from '../services/api.service';\r\nimport {Room} from '../classes/room';\r\n//import { MatDialogRef,MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { concat } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-add-meeting-room-info',\r\n  templateUrl: './add-meeting-room-info.component.html',\r\n  styleUrls: ['./add-meeting-room-info.component.css']\r\n})\r\nexport class AddMeetingRoomInfoComponent implements OnInit {\r\n\r\n  //constructor(private apiDB: apiService,public dialogRef:MatDialogRef<AddMeetingRoomInfoComponent>,@Inject(MAT_DIALOG_DATA) public data: any) { }\r\n  constructor(private _router: Router,private apiDB: apiService,public dialogRef:MatDialogRef<AddMeetingRoomInfoComponent>) { }\r\n  \r\n  amenityList: string[] = ['Projector', 'Whiteboard', 'Monitor', 'Polycom Telephone'];\r\n  floorNumbers: string[] = ['1','2','3','4','5','6','7','8'];\r\n  buildingList: string[] = ['A','B','C','D'];\r\n  RoomInfo=new FormGroup({\r\n    RoomNumber:new FormControl('',[Validators.required,Validators.pattern(\"^[0-9]*$\")]),\r\n    FloorNumber:new FormControl(''),\r\n    Amenity:new FormControl(''),\r\n    NrSeats:new FormControl('',[Validators.required,Validators.pattern(\"^[0-9]*$\")]),\r\n    RoomName:new FormControl('',[Validators.required]),\r\n    Building:new FormControl(''),\r\n    Distance:new FormControl('',[Validators.required,Validators.pattern(\"^[0-9]*$\")])\r\n  });\r\n  ngOnInit(): void {\r\n    if(localStorage.getItem('loggedIn') == \"false\")\r\n    {\r\n      // this._router.navigate(['login']);\r\n    }\r\n  }\r\n\r\n  onSubmit(){\r\n    console.log(\"no seats\",this.RoomInfo.controls['Amenity'].value);\r\n    var formData=new Room();\r\n    \r\n    var roomNumber =<string><any>this.RoomInfo.controls['RoomNumber'].value;\r\n    formData.Amenity=<string><any>this.RoomInfo.controls['Amenity'].value;\r\n    formData.FloorNumber=<number><any>this.RoomInfo.controls['FloorNumber'].value;\r\n    formData.RoomName=<string><any>this.RoomInfo.controls['RoomName'].value;\r\n    formData.maxSeats=<number><any>this.RoomInfo.controls['NrSeats'].value;\r\n    formData.Building = <number><any>this.RoomInfo.controls['Building'].value;\r\n    \r\n    // formData.isAvailable = true;\r\n    formData.isExternal = false;\r\n    var rID = (<string><any>formData.FloorNumber).concat(<string><any>formData.Building);\r\n    rID = rID.concat(roomNumber);\r\n    var dist = <number><any>this.RoomInfo.controls['Distance'].value;\r\n    formData.RoomID = rID;\r\n    formData.DistanceFromElevator = dist;\r\n    console.log(\"Room ID- \" + rID + \"; distance from elevator- \" + dist);\r\n    if(formData.Amenity.includes(\"Whiteboard\"))\r\n    {\r\n      formData.Whiteboard = true;\r\n    }\r\n    else\r\n    {\r\n      formData.Whiteboard = false;\r\n    }\r\n    if(formData.Amenity.includes(\"Projector\"))\r\n    {\r\n      formData.Projector = true;\r\n    }\r\n    else\r\n    {\r\n      formData.Projector = false;\r\n    }\r\n    if(formData.Amenity.includes(\"Monitor\"))\r\n    {\r\n      formData.Monitor = true;\r\n    }\r\n    else\r\n    {\r\n      formData.Monitor = false;\r\n    }\r\n\r\n    console.log(formData);\r\n    this.apiDB.post(formData)\r\n    .subscribe(\r\n      data=>{\r\n        console.log('Response post', data);\r\n      }\r\n    );\r\n    // console.warn(this.RoomInfo.value)\r\n    // console.log(this.RoomInfo.controls['RoomNumber'].value);//individual values\r\n    //from here send json format to the DB \r\n    this.onClose();\r\n    this.done();\r\n  }\r\n  onClose(){\r\n    this.dialogRef.close();\r\n  }\r\n  cancel(){\r\n    this.onClose();\r\n  }\r\n  done(){\r\n    // window.location.reload();\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n    <!-- <div class=\"_head\"> -->\r\n    <h1>Enter the Meeting Room details below</h1>\r\n    <!-- </div> -->\r\n      <form [formGroup]=\"RoomInfo\" (ngSubmit)=\"onSubmit()\">\r\n          <mat-form-field color=\"accent\">\r\n            <mat-label>Room Number</mat-label>\r\n            <input formControlName=\"RoomNumber\" matInput>\r\n            <!-- mat-error is for validation -->\r\n            <mat-error *ngIf=\"RoomInfo.controls['RoomNumber'].hasError('required')\">\r\n              Room Number is required\r\n            </mat-error>\r\n            <mat-error *ngIf=\"RoomInfo.controls['RoomNumber'].hasError('pattern')\">\r\n              please enter a valid integer\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <br/>\r\n\r\n          <mat-form-field color=\"accent\">\r\n            <mat-label>Room Name</mat-label>\r\n            <input formControlName=\"RoomName\" matInput>\r\n            <mat-error *ngIf=\"RoomInfo.controls['RoomName'].hasError('required')\">\r\n              Room Name is <strong>required</strong>\r\n            </mat-error>\r\n            <!-- <mat-error *ngIf=\"RoomInfo.controls['Distance'].hasError('pattern')\">\r\n              please enter a valid integer\r\n            </mat-error> -->\r\n          </mat-form-field>\r\n          <br/>\r\n\r\n          <mat-form-field color=\"accent\">\r\n            <mat-label>Floor Number</mat-label>\r\n            <mat-select formControlName=\"FloorNumber\">\r\n              <mat-option style=\"color:black\" *ngFor=\"let floors of floorNumbers\" [value]=\"floors\" >{{floors}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <br/>\r\n\r\n          <mat-form-field color=\"accent\">\r\n            <mat-label>Amenities</mat-label>\r\n            <mat-select formControlName=\"Amenity\" multiple>\r\n              <mat-option style=\"color:black\" *ngFor=\"let amenity of amenityList\" [value]=\"amenity\" >{{amenity}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field><br/>\r\n            \r\n          <mat-form-field color=\"accent\">\r\n            <mat-label>Number of seats</mat-label>\r\n            <input formControlName=\"NrSeats\" matInput>\r\n            <mat-error *ngIf=\"RoomInfo.controls['NrSeats'].hasError('required')\">\r\n              Number of seats is <strong>required</strong>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"RoomInfo.controls['NrSeats'].hasError('pattern')\">\r\n              please enter a valid integer\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <br/>\r\n\r\n          <mat-form-field color=\"accent\">\r\n            <mat-label>Building number</mat-label>\r\n            <mat-select formControlName=\"Building\">\r\n              <mat-option style=\"color:black\" *ngFor=\"let buildingNo of buildingList\" [value]=\"buildingNo\" >{{buildingNo}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <br/>\r\n\r\n          <mat-form-field color=\"accent\">\r\n            <mat-label>Distance from elevator(in meters)</mat-label>\r\n            <input formControlName=\"Distance\" matInput>\r\n            <mat-error *ngIf=\"RoomInfo.controls['Distance'].hasError('required')\">\r\n              Distance is <strong>required</strong>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"RoomInfo.controls['Distance'].hasError('pattern')\">\r\n              please enter a valid integer\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <br/>\r\n\r\n          <!-- <mat-form-field color=\"accent\"> -->\r\n            <button id=\"submit\" class =\"btn btn-primary\" type=\"submit\" [disabled]=\"RoomInfo.invalid\" value=\"submit\">submit</button>&nbsp;\r\n            <button id=\"cancel\" class =\"btn btn-danger\" (click)=\"cancel()\">cancel</button>\r\n          <!-- </mat-form-field> -->\r\n      </form> \r\n    \r\n    \r\n    <!-- <div  ngbDropdown #myDrop=\"ngbDropdown\">\r\n        <button class=\"btn btn-outline-primary mr-2\" id=\"dropdownManual\" ngbDropdownAnchor (focus)=\"myDrop.open()\">Toggle dropdown</button>\r\n        <div ngbDropdownMenu aria-labelledby=\"dropdownManual\">\r\n          <button ngbDropdownItem>Action - 1</button>\r\n          <button ngbDropdownItem>Another Action</button>\r\n          <button ngbDropdownItem>Something else is here</button>\r\n        </div>\r\n      </div> -->\r\n    \r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RetrieveMeetingRoomInfoComponent } from './retrieve-meeting-room-info/retrieve-meeting-room-info.component'\r\nimport { EmployeeInfoComponent } from './employee-info/employee-info.component';\r\nimport { MeetingInfoComponent } from './meeting-info/meeting-info.component';\r\n\r\n\r\nconst routes: Routes = \r\n[\r\n  {\r\n    path:'',\r\n    component:LoginComponent\r\n  },\r\n  {\r\n    path:'login',\r\n    component:LoginComponent\r\n  },\r\n  {\r\n    path:'dashboard',\r\n    component:DashboardComponent,\r\n    children: [\r\n      {path: 'employee-info', component: EmployeeInfoComponent},\r\n      {path: 'retrieve-meeting-room-info', component: RetrieveMeetingRoomInfoComponent},\r\n      {path: 'meeting-info', component: MeetingInfoComponent}\r\n      \r\n    ]\r\n  }\r\n  //,\r\n  // {\r\n  //   path:'retrieve-meeting-room-info',\r\n  //   component:RetrieveMeetingRoomInfoComponent\r\n  // }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n// import {FormGroup,FormControl,Validators} from '@angular/forms';\r\n// import { apiService } from './services/api.service';\r\n// import { Comments } from './classes/comments';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Room Booking Manager';\r\n  constructor(private _router: Router){}\r\n  ngOnInit()\r\n  {\r\n    localStorage.setItem('loggedIn', \"false\");\r\n    console.log(\"loca\" + localStorage.getItem('loggedIn'));\r\n  }\r\n  // constructor(private _apiService: apiService, private _router: Router){}\r\n  // form = new FormGroup({  \r\n  //   username: new FormControl('', Validators.required),  \r\n  //   password: new FormControl('', Validators.required),\r\n  //   // submit: new FormControl()\r\n  // });\r\n  // get username() {  \r\n  //   return this.form.get('username');  \r\n  // } \r\n  // get password() {  \r\n  //   return this.form.get('password');  \r\n  // } \r\n  \r\n  // lstcomments:Comments[];\r\n  // ngOnInit()\r\n  // {\r\n  //   this._apiService.getcomments()\r\n  //   .subscribe\r\n  //   (\r\n  //     data=>\r\n  //     {\r\n  //         this.lstcomments = data;//typecast data to list of comments \r\n  //         console.log(this.lstcomments);\r\n  //     }\r\n  //   )\r\n  //   this._router.navigate(['dashboard']);\r\n  // }\r\n  // _username:string;\r\n  // _password:string;\r\n  // _match:boolean;\r\n  // button = \"\";\r\n\r\n  // onSubmit() {\r\n  //   // TODO: Use EventEmitter with form value\r\n  //   console.warn(this.form.get('username').value);\r\n  //   console.warn(this.form.value);\r\n  //   this._username = this.form.get('username').value;\r\n  //   this._password = this.form.get('password').value;\r\n\r\n  //   for(let i = 0; i < this.lstcomments.length; i++) \r\n  //   {\r\n      \r\n  //     if(this.lstcomments[i].Username == this._username)\r\n  //     {\r\n  //       console.log(\"Found\");\r\n  //       if(this.lstcomments[i].Password == this._password)\r\n  //       {\r\n  //         console.log(\"Passwords match\");\r\n  //         this._match = true;\r\n  //         this._router.navigate(['dashboard']);\r\n  //       }\r\n  //       else\r\n  //       {\r\n  //         console.log(\"Wrong password!\");\r\n  //         this._match = false;\r\n  //         //this._router.navigate([`dashboard`]);\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   this.button = \"clicked\";\r\n  // }\r\n}\r\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\r\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n\r\n<!-- <h1>{{title}}</h1> -->\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n\r\n\r\n\r\n","import { MaterialModule } from './material/material.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { apiService } from './services/api.service';\r\nimport { roomsService } from './services/rooms.service';\r\nimport { empService } from './services/employee.service';\r\n\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RetrieveMeetingRoomInfoComponent } from './retrieve-meeting-room-info/retrieve-meeting-room-info.component';\r\nimport { AddMeetingRoomInfoComponent } from './add-meeting-room-info/add-meeting-room-info.component';\r\nimport { EditMeetingRoomInfoComponent } from './edit-meeting-room-info/edit-meeting-room-info.component';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { EmployeeInfoComponent } from './employee-info/employee-info.component';\r\nimport { EditEmployeeComponent } from './edit-employee/edit-employee.component';\r\nimport { MeetingInfoComponent } from './meeting-info/meeting-info.component';\r\nimport { RegisterConfirmComponent } from './register-confirm/register-confirm.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    LoginComponent,\r\n    RetrieveMeetingRoomInfoComponent,\r\n    AddMeetingRoomInfoComponent,\r\n    EditMeetingRoomInfoComponent,\r\n    RegisterComponent,\r\n    EmployeeInfoComponent,\r\n    EditEmployeeComponent,\r\n    MeetingInfoComponent,\r\n    RegisterConfirmComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    MaterialModule,\r\n    NgMultiSelectDropDownModule.forRoot()\r\n  ],\r\n  providers: [apiService,roomsService,empService],\r\n  bootstrap: [AppComponent],\r\n  entryComponents:[AddMeetingRoomInfoComponent,EditMeetingRoomInfoComponent,RegisterComponent,EmployeeInfoComponent,EditEmployeeComponent]\r\n})\r\nexport class AppModule { }\r\n","export class Room\r\n{\r\n    RoomID:string\r\n    RoomName:string\r\n    FloorNumber:number\r\n    Amenity:string\r\n    maxSeats:number\r\n    isExternal:boolean\r\n    Building:number\r\n    Whiteboard:boolean\r\n    Projector:boolean\r\n    Monitor:boolean\r\n    // isAvailable:boolean\r\n    DistanceFromElevator:number\r\n}","export class User\r\n{\r\n    // EmployeeID:number\r\n    FirstName: string\r\n    LastName: string\r\n    EmpEmail: string\r\n    isAdmin: any\r\n    EmpPassword:string\r\n    LocationID:string\r\n    Distance:number\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private _router: Router) { }\r\n\r\n  _isAdmin:boolean\r\n\r\n  ngOnInit(): void {\r\n    // this._router.navigate(['retrieve-meeting-room-info']);\r\n    if(localStorage.getItem('loggedIn') == \"false\")//\r\n    {\r\n      //this._router.navigate(['login']);\r\n    }\r\n    if(localStorage.getItem('admin') == \"true\")\r\n    {\r\n      this._isAdmin = true;\r\n      console.log(\"Admin\");\r\n    }\r\n    else\r\n    {\r\n      this._isAdmin = false;\r\n      console.log(\"Not admin\");\r\n    }\r\n   this.retrieveMeetings();\r\n  }\r\n\r\n  retrieveRooms():void\r\n  {\r\n    // this._router.navigate(['retrieve-meeting-room-info']);\r\n    this._router.navigate(['dashboard/retrieve-meeting-room-info']);\r\n  }\r\n  retrieveEmps():void\r\n  {\r\n    this._router.navigate(['dashboard/employee-info']);\r\n  }\r\n  retrieveMeetings():void\r\n  {\r\n    this._router.navigate(['dashboard/meeting-info']);\r\n  }\r\n  logout():void\r\n  {\r\n    localStorage.setItem('loggedIn', \"false\");\r\n    localStorage.setItem('admin',\"false\");\r\n    console.log(localStorage.getItem('loggedIn'));\r\n  }\r\n}\r\n","<nav>\r\n    <ul class=\"horizontal\">\r\n        <li><a class=\"active\" href=\"#home\">Room Booking Manager Dashboard</a></li>\r\n        <li id=\"logout\"><a (click)=\"logout()\" routerLink=\"\">Logout</a></li>\r\n    </ul>\r\n  </nav>\r\n  <div class=\"sidenav\">\r\n    <div id=sideLinks>\r\n      <a class=\"active\" *ngIf=\"_isAdmin\" (click)=\"retrieveMeetings()\">Scheduled Meetings</a>\r\n      <a class=\"active\" *ngIf=\"_isAdmin\" (click)=\"retrieveRooms()\" >Meeting Rooms</a>\r\n      <a class=\"active\" *ngIf=\"_isAdmin\"(click)=\"retrieveEmps()\">Employees</a>\r\n      <!-- <a *ngIf=\"_isAdmin\" href=\"#\">Set Rules</a> -->\r\n    </div>\r\n  </div>\r\n  <div id=\"routerPosition\">\r\n    <div id=\"toCenter\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport {FormGroup,FormControl, Validators} from '@angular/forms';\r\nimport { apiService } from '../services/api.service';\r\nimport { empService } from '../services/employee.service';\r\nimport {User} from '../classes/user';\r\n//import { MatDialogRef,MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-edit-employee',\r\n  templateUrl: './edit-employee.component.html',\r\n  styleUrls: ['./edit-employee.component.css']\r\n})\r\nexport class EditEmployeeComponent implements OnInit {\r\n\r\n  constructor(private _router: Router,private apiDB: apiService,public dialogRef:MatDialogRef<EditEmployeeComponent>,private mUser:empService) { }\r\n  get getUser():User\r\n  {\r\n    return this.mUser.myUser;\r\n  }\r\n  rad_admin: string[] = ['true', 'false'];\r\n  \r\n  EmpInfo=new FormGroup({\r\n    firstname:new FormControl('',[Validators.required]),\r\n    lastname:new FormControl('',[Validators.required]),\r\n    email:new FormControl('',[Validators.required]),\r\n    roomID:new FormControl('',[Validators.required]),\r\n    password:new FormControl('',[Validators.required]),\r\n    admin: new FormControl(',',[Validators.required])\r\n  });\r\n\r\n  get roomID() {  \r\n    return this.EmpInfo.get('roomID');  \r\n  } \r\n  get firstname() {  \r\n    return this.EmpInfo.get('firstname');  \r\n  } \r\n  get lastname() {  \r\n    return this.EmpInfo.get('lastname');  \r\n  } \r\n  get email() {  \r\n    return this.EmpInfo.get('email');  \r\n  } \r\n  get password() {  \r\n    return this.EmpInfo.get('password');  \r\n  } \r\n  get admin() {  \r\n    return this.EmpInfo.get('admin');  \r\n  } \r\n\r\n  adminChosen: string\r\n  ngOnInit(): void {\r\n\r\n    if(localStorage.getItem('loggedIn') == \"false\")\r\n    {\r\n      //this._router.navigate(['login']);\r\n    }\r\n    this.adminChosen = <string><any>this.getUser.isAdmin;\r\n    this.EmpInfo.controls['firstname'].setValue(this.getUser.FirstName);\r\n    this.EmpInfo.controls['lastname'].setValue(this.getUser.LastName);\r\n    this.EmpInfo.controls['email'].setValue(this.getUser.EmpEmail);\r\n    this.EmpInfo.controls['roomID'].setValue(this.getUser.LocationID);\r\n    this.EmpInfo.controls['password'].setValue(this.getUser.EmpPassword);\r\n    this.EmpInfo.controls['admin'].setValue(this.adminChosen);\r\n    \r\n    console.log(this.adminChosen);\r\n  }\r\n  updateE(){\r\n    var formData=new User();\r\n    formData.FirstName = <string><any>this.EmpInfo.controls['firstname'].value;\r\n    formData.LastName = <string><any>this.EmpInfo.controls['lastname'].value;\r\n    formData.EmpEmail = <string><any>this.EmpInfo.controls['email'].value;\r\n    formData.LocationID = <string><any>this.EmpInfo.controls['roomID'].value;\r\n    formData.EmpPassword = <string><any>this.EmpInfo.controls['password'].value;\r\n    formData.isAdmin = <boolean><any>this.EmpInfo.controls['admin'].value;\r\n    console.log(formData);\r\n    this.apiDB.updateEmployee(formData)\r\n    .subscribe(\r\n      data=>{\r\n        console.log('Response post', data);\r\n      }\r\n    );\r\n    this.cancel();\r\n    this.done();\r\n\r\n  }\r\n  onClose(){\r\n    this.dialogRef.close();\r\n    //window.location.reload();\r\n  }\r\n  cancel(){\r\n    this.onClose();\r\n  }\r\n  done(){\r\n    //window.location.reload();\r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n  <!-- <div class=\"_head\"> -->\r\n  <h1>Enter the Employee details below</h1>\r\n  <!-- </div> -->\r\n    <form [formGroup]=\"EmpInfo\" (ngSubmit)=\"updateE()\">\r\n        <mat-form-field color=\"accent\" class=\"field\">\r\n            <mat-label>First Name</mat-label>\r\n            <input formControlName=\"firstname\" matInput required>\r\n            <!-- mat-error is for validation -->\r\n            <mat-error *ngIf=\"EmpInfo.get('firstname').touched && EmpInfo.get('firstname').invalid\">\r\n                First Name is <strong>required</strong>\r\n            </mat-error>\r\n        </mat-form-field>\r\n        &nbsp;&nbsp;\r\n        <mat-form-field color=\"accent\" class=\"field\">\r\n            <mat-label>Last Name</mat-label>\r\n            <input formControlName=\"lastname\" matInput required>\r\n            <!-- mat-error is for validation -->\r\n            <mat-error *ngIf=\"EmpInfo.get('lastname').touched && EmpInfo.get('lastname').invalid\">\r\n                Last Name is <strong>required</strong>\r\n            </mat-error>\r\n        </mat-form-field>   \r\n        <br/>\r\n        <mat-form-field color=\"accent\" class=\"field\">\r\n            <mat-label>Email</mat-label>\r\n            <input formControlName=\"email\" matInput required>\r\n            <!-- mat-error is for validation -->\r\n            <mat-error *ngIf=\"EmpInfo.get('email').touched && EmpInfo.get('email').invalid\">\r\n                Email is <strong>required</strong>\r\n            </mat-error>\r\n        </mat-form-field>\r\n        &nbsp;&nbsp;\r\n        <mat-form-field color=\"accent\" class=\"field\">\r\n            <mat-label>Password</mat-label>\r\n            <input formControlName=\"password\" matInput required>\r\n            <!-- mat-error is for validation -->\r\n            <mat-error *ngIf=\"EmpInfo.get('password').touched && EmpInfo.get('password').invalid\">\r\n                Password is <strong>required</strong>\r\n            </mat-error>\r\n        </mat-form-field>\r\n        <br/>\r\n        <mat-form-field color=\"accent\" class=\"field\">\r\n            <mat-label>Room ID</mat-label>\r\n            <input formControlName=\"roomID\" matInput required>\r\n            <!-- mat-error is for validation -->\r\n            <mat-error *ngIf=\"EmpInfo.get('roomID').touched && EmpInfo.get('roomID').invalid\">\r\n                Room ID is <strong>required</strong>\r\n            </mat-error>\r\n        </mat-form-field>\r\n        &nbsp;&nbsp;\r\n        <mat-form-field color=\"accent\" class=\"field\">\r\n            <mat-label>Admin</mat-label>\r\n            <mat-select formControlName=\"admin\" [(ngModel)]=\"adminChosen\" >\r\n                <mat-option style=\"color:black\" *ngFor=\"let admin of rad_admin\" [value]=\"admin\" >{{admin}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <div class=\"form-group col-md-12\">\r\n            <button class=\"btn btn-primary\" [disabled]=\"EmpInfo.get('firstname').invalid || EmpInfo.get('lastname').invalid || EmpInfo.get('email').invalid || EmpInfo.get('password').invalid || EmpInfo.get('roomID').invalid || EmpInfo.get('admin').invalid\" type=\"submit\" >Submit</button>\r\n            &nbsp;&nbsp;\r\n            <button id=\"cancel\" class =\"btn btn-danger\" (click)=\"cancel()\">cancel</button>\r\n            <br/><br/>\r\n            <!-- <p *ngIf=\"buttonReg != '' && _exist\" class=\"alert alert-danger\"> \r\n                User with username already exists!           \r\n            </p>  -->\r\n        \r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {FormGroup,FormControl, Validators} from '@angular/forms';\r\nimport { apiService } from '../services/api.service';\r\nimport { roomsService } from '../services/rooms.service';\r\nimport {Room} from '../classes/room';\r\n//import { MatDialogRef,MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-meeting-room-info',\r\n  templateUrl: './edit-meeting-room-info.component.html',\r\n  styleUrls: ['./edit-meeting-room-info.component.css']\r\n})\r\nexport class EditMeetingRoomInfoComponent implements OnInit {\r\n\r\n  constructor(private _router: Router,private apiDB: apiService,public dialogRef:MatDialogRef<EditMeetingRoomInfoComponent>,private mRoom:roomsService) { }\r\n  get getRoom():Room\r\n  {\r\n    return this.mRoom.myRoom;\r\n  }\r\n  amenityList: string[] = ['Projector', 'Whiteboard', 'Monitor', 'Polycom Telephone'];\r\n  RoomInfo=new FormGroup({\r\n    RoomNumber:new FormControl('',[Validators.required]),\r\n    FloorNumber:new FormControl('',[Validators.required,Validators.pattern(\"^[0-9]*$\")]),\r\n    Amenity:new FormControl(''),\r\n    NrSeats:new FormControl('',[Validators.required,Validators.pattern(\"^[0-9]*$\")]),\r\n    RoomName:new FormControl('',[Validators.required])\r\n  });\r\n  get RoomNumber() {  \r\n    return this.RoomInfo.get('RoomInfo');  \r\n  } \r\n  amenities:string[];\r\n  //am:any =[];\r\n  ngOnInit(): void {\r\n    if(localStorage.getItem('loggedIn') == \"false\")\r\n    {\r\n      //this._router.navigate(['login']);\r\n    }\r\n    console.log(\"here\");\r\n    console.log(this.getRoom.RoomName);\r\n    this.amenities = this.getRoom.Amenity.split(',');\r\n    // console.log(this.amenities);\r\n    // for(let i = 0; i < this.amenities.length; i++) \r\n    // {\r\n      \r\n    //   this.am.push({name:this.amenities[i]});\r\n    // }\r\n   // console.log('final-> '+ this.am[name]);\r\n    this.RoomInfo.controls['RoomNumber'].setValue(this.getRoom.RoomID);\r\n    this.RoomInfo.controls['FloorNumber'].setValue(this.getRoom.FloorNumber);\r\n    this.RoomInfo.controls['Amenity'].setValue(this.getRoom.Amenity);\r\n    this.RoomInfo.controls['NrSeats'].setValue(this.getRoom.maxSeats);\r\n    this.RoomInfo.controls['RoomName'].setValue(this.getRoom.RoomName);\r\n    //console.log(this.getRoom.Amenities + \" - \" + this.RoomInfo.controls['RoomNumber'].value);\r\n  }\r\n  \r\n  updateR(){\r\n    var formData=new Room();\r\n    formData.RoomID=<string><any>this.RoomInfo.controls['RoomNumber'].value;\r\n    formData.Amenity=<string><any>this.RoomInfo.controls['Amenity'].value;\r\n    formData.FloorNumber=<number><any>this.RoomInfo.controls['FloorNumber'].value;\r\n    formData.RoomName=<string><any>this.RoomInfo.controls['RoomName'].value;\r\n    formData.maxSeats=<number><any>this.RoomInfo.controls['NrSeats'].value;\r\n    formData.isExternal = this.getRoom.isExternal;\r\n    formData.Building = this.getRoom.Building;\r\n    formData.Whiteboard = this.getRoom.Whiteboard;\r\n    formData.Projector = this.getRoom.Projector;\r\n    formData.Monitor = this.getRoom.Monitor;\r\n    // formData.isAvailable = this.getRoom.isAvailable;\r\n    console.log(formData);\r\n    this.apiDB.updateRoom(formData)\r\n    .subscribe(\r\n      data=>{\r\n        console.log('Response post', data);\r\n      }\r\n    );\r\n    \r\n    // console.warn(this.RoomInfo.value)\r\n    // console.log(this.RoomInfo.controls['RoomNumber'].value);//individual values\r\n    //from here send json format to the DB \r\n    this.onClose();\r\n    this.done();\r\n  }\r\n  onClose(){\r\n    this.dialogRef.close();\r\n  }\r\n  cancel(){\r\n    this.onClose();\r\n  }\r\n  done(){\r\n    // window.location.reload();\r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n  <!-- <div class=\"_head\"> -->\r\n  <h1>Enter the Meeting Room details below</h1>\r\n  <!-- </div> -->\r\n    <form [formGroup]=\"RoomInfo\" (ngSubmit)=\"updateR()\">\r\n        <mat-form-field color=\"accent\">\r\n          <mat-label>Room Number*</mat-label>\r\n          <input formControlName=\"RoomNumber\" matInput>\r\n          <!-- mat-error is for validation -->\r\n          <mat-error *ngIf=\"RoomInfo.controls['RoomNumber'].hasError('required')\">\r\n            Room Number is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <br/>\r\n\r\n        <mat-form-field color=\"accent\">\r\n          <mat-label>Room Name</mat-label>\r\n          <input formControlName=\"RoomName\" matInput>\r\n          <mat-error *ngIf=\"RoomInfo.controls['RoomName'].hasError('required')\">\r\n            Room Name is <strong>required</strong>\r\n          </mat-error>\r\n          <!-- <mat-error *ngIf=\"RoomInfo.controls['Distance'].hasError('pattern')\">\r\n            please enter a valid integer\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n        <br/>\r\n\r\n        <mat-form-field color=\"accent\">\r\n          <mat-label>Floor Number</mat-label>\r\n          <input formControlName=\"FloorNumber\" matInput>\r\n          <mat-error *ngIf=\"RoomInfo.controls['FloorNumber'].hasError('required')\">\r\n            Floor number is <strong>required</strong>\r\n          </mat-error>\r\n        <mat-error *ngIf=\"RoomInfo.controls['FloorNumber'].hasError('pattern')\">\r\n          please enter a valid integer\r\n        </mat-error>\r\n        </mat-form-field>\r\n        <br/>\r\n\r\n        <mat-form-field color=\"accent\">\r\n          <mat-label>Amenities</mat-label>\r\n          <mat-select formControlName=\"Amenity\" multiple [(ngModel)]=\"amenities\"> \r\n            <mat-option style=\"color:black\" *ngFor=\"let amenity of amenityList\" [value]=\"amenity\" >{{amenity}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field><br/>\r\n          \r\n        <mat-form-field color=\"accent\">\r\n          <mat-label>Number of seats</mat-label>\r\n          <input formControlName=\"NrSeats\" matInput>\r\n          <mat-error *ngIf=\"RoomInfo.controls['NrSeats'].hasError('required')\">\r\n            Number of seats is <strong>required</strong>\r\n          </mat-error>\r\n          <mat-error *ngIf=\"RoomInfo.controls['NrSeats'].hasError('pattern')\">\r\n            please enter a valid integer\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <br/>\r\n\r\n        <!-- <mat-form-field color=\"accent\"> -->\r\n          <button id=\"submit\" class =\"btn btn-primary\" type=\"submit\" [disabled]=\"RoomInfo.invalid\" value=\"submit\">submit</button>&nbsp;\r\n          <button id=\"cancel\" class =\"btn btn-danger\" (click)=\"cancel()\">cancel</button>\r\n        <!-- </mat-form-field> -->\r\n    </form> \r\n  \r\n  \r\n  <!-- <div  ngbDropdown #myDrop=\"ngbDropdown\">\r\n      <button class=\"btn btn-outline-primary mr-2\" id=\"dropdownManual\" ngbDropdownAnchor (focus)=\"myDrop.open()\">Toggle dropdown</button>\r\n      <div ngbDropdownMenu aria-labelledby=\"dropdownManual\">\r\n        <button ngbDropdownItem>Action - 1</button>\r\n        <button ngbDropdownItem>Another Action</button>\r\n        <button ngbDropdownItem>Something else is here</button>\r\n      </div>\r\n    </div> -->\r\n  \r\n</div>","import { MatDialog,MatDialogConfig } from '@angular/material/dialog';\r\nimport { Component, OnInit, AfterViewInit, ViewChild, Renderer2 } from '@angular/core';\r\nimport { apiService } from '../services/api.service';\r\nimport { empService } from '../services/employee.service';\r\nimport { EditEmployeeComponent } from '../edit-employee/edit-employee.component';\r\nimport { User } from '../classes/user';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-employee-info',\r\n  templateUrl: './employee-info.component.html',\r\n  styleUrls: ['./employee-info.component.css']\r\n})\r\nexport class EmployeeInfoComponent implements OnInit {\r\n  @ViewChild('data') data;\r\n  constructor(private _router: Router,private apiDB: apiService, private dialog:MatDialog, private renderer2:Renderer2, private mUser:empService) { }\r\n \r\n  set setEmp(_user:User)\r\n  {\r\n    this.mUser.myUser = _user;\r\n  }\r\n  listEmployees:User[];\r\n  ngOnInit(): void {\r\n    if(localStorage.getItem('loggedIn') == \"false\")\r\n    {\r\n      //this._router.navigate(['login']);\r\n    }\r\n    this.apiDB.getUsers()\r\n    .subscribe (\r\n      data=>{\r\n       this.listEmployees=data;//type casting into the  form listed in user.ts\r\n       console.log('Response2', data);\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n  makeAdmin(fName:string,lName:string,email:string,location:string,password:string,)\r\n  {\r\n    if(confirm(`Are you sure you want to make ${fName} an admin?`))\r\n    { \r\n      var formData=new User();\r\n      formData.FirstName = fName;\r\n      formData.LastName = lName;\r\n      formData.EmpEmail = email;\r\n      formData.LocationID = location;\r\n      formData.EmpPassword = password;\r\n      formData.isAdmin = 1;\r\n\r\n      this.apiDB.updateEmployee(formData)\r\n    .subscribe(\r\n      data=>{\r\n       // console.log('Response post', data);\r\n      }\r\n    );\r\n        \r\n        this.ngOnInit();\r\n     \r\n      \r\n    }\r\n  }\r\n\r\n  RevokeAdmin(fName:string,lName:string,email:string,location:string,password:string,)\r\n  {\r\n    if(confirm(`Are you sure you want to remove ${fName}'s admin privilege?`))\r\n    { \r\n      var formData=new User();\r\n      formData.FirstName = fName;\r\n      formData.LastName = lName;\r\n      formData.EmpEmail = email;\r\n      formData.LocationID = location;\r\n      formData.EmpPassword = password;\r\n      formData.isAdmin = 0;\r\n\r\n      this.apiDB.updateEmployee(formData)\r\n    .subscribe(\r\n      data=>{\r\n        //console.log('Response post', data);\r\n      }\r\n    );\r\n        \r\n        this.ngOnInit();\r\n     \r\n      \r\n    }\r\n  }\r\n\r\n  edit(fName:string,lName:string,email:string,location:string,password:string,isAdmin:boolean)\r\n  {\r\n    var formData=new User();\r\n    formData.FirstName = fName;\r\n    formData.LastName = lName;\r\n    formData.EmpEmail = email;\r\n    formData.LocationID = location;\r\n    formData.EmpPassword = password;\r\n    formData.isAdmin = isAdmin;\r\n    this.setEmp = formData;\r\n    // this.apiDB.getRecord(formData)\r\n    // .subscribe(\r\n    //   data=>{\r\n    //     console.log('Response post', data);\r\n    //   });\r\n        //window.location.reload();\r\n        //this.ngOnInit();\r\n    const editDialog=new MatDialogConfig();\r\n    editDialog.backdropClass=\"backGround\";\r\n    // configDialog.width='700px';\r\n    // configDialog.height='400px';\r\n    this.dialog.open(EditEmployeeComponent,editDialog);\r\n  }\r\n\r\n  delete(id:string){\r\n    if(confirm(`Are you sure to delete Room number ${id}`)) {\r\n      console.log(\"Implement delete functionality here\");\r\n      var formData=new User();\r\n      formData.EmpEmail=id;\r\n      this.apiDB.deleteUser(formData)\r\n      .subscribe(\r\n        data=>{\r\n          console.log('Response post', data);\r\n        });\r\n        // window.location.reload();\r\n        //this.ngOnInit();\r\n    }\r\n    this.done();\r\n  }\r\n  done(){\r\n    window.location.reload();\r\n  }\r\n\r\n}\r\n","<h2>Employee Information</h2>\r\n<div >\r\n    \r\n    <div class=\"table-wrapper-scroll-y table-wrapper-scroll-x my-custom-scrollbar\">\r\n        <table class=\"table center tableRoom\">\r\n            <tr>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>Email</th>\r\n                <th>Location</th>\r\n                <th>Admin</th>\r\n                <th>Admin Privilege Settings</th>\r\n            </tr>\r\n            <tr *ngFor=\"let user of listEmployees\">\r\n                <td attr.class=\"{{user.FirstName}}\">{{user.FirstName}}</td>\r\n                <td attr.class=\"{{user.LastName}}\">{{user.LastName}}</td>\r\n                <td attr.class=\"{{user.EmpEmail}}\">{{user.EmpEmail}}</td>\r\n                <td attr.class=\"{{user.LocationID}}\">{{user.LocationID}}</td>\r\n                <td attr.class=\"{{user.isAdmin}}\">\r\n                    <ng-template [ngIf]=\"user.isAdmin > 0\" [ngIfElse]=\"notAdmin\">\r\n                        yes\r\n                    </ng-template>\r\n                    <ng-template #notAdmin>\r\n                        no\r\n                    </ng-template>\r\n                 </td>\r\n                <!-- <td></td> -->\r\n                <td>\r\n                    <ng-template [ngIf]=\"user.EmpEmail == 'AdeleV@teamthreshold.onmicrosoft.com'\" [ngIfElse]=\"notAdel\">\r\n                        -\r\n                    </ng-template>\r\n                    <ng-template #notAdel>\r\n                        <ng-template  [ngIf]=\"user.isAdmin > 0\" [ngIfElse]=\"notA\">\r\n                            <button class=\"btn btn-danger\" id=\"b1\" (click)=\"RevokeAdmin(user.FirstName,user.LastName,user.EmpEmail,user.LocationID,user.EmpPassword)\">Revoke</button>\r\n                        </ng-template>\r\n                        <ng-template #notA>\r\n                            <button class=\"btn btn-primary\" id=\"b1\" (click)=\"makeAdmin(user.FirstName,user.LastName,user.EmpEmail,user.LocationID,user.EmpPassword)\">Make</button>\r\n                        </ng-template>\r\n                    </ng-template>\r\n                    \r\n                </td>\r\n                <!-- <td>\r\n                    <span>\r\n                        <button class=\"btn btn-danger\" id=\"b1\" (click)=\"delete(user.EmpEmail)\">Delete</button>\r\n                        <button class=\"btn btn-success\" (click)=\"edit(user.FirstName,user.LastName,user.EmpEmail,user.LocationID,user.EmpPassword,user.isAdmin)\">Edit</button>\r\n                         <button class=\"btn btn-primary\" >Assign Admin</button>&nbsp; -\r\n                    </span>\r\n                </td> -->\r\n            </tr>\r\n        \r\n        </table>\r\n    </div>\r\n</div>\r\n","import { RegisterComponent } from './../register/register.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {FormGroup,FormControl,Validators} from '@angular/forms';\r\nimport { apiService } from '../services/api.service';\r\nimport { Comments } from '../classes/comments';\r\nimport { User } from '../classes/user';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog,MatDialogConfig } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  hide = true;\r\n  \r\n  constructor(private _apiService: apiService, private _router: Router,private dialog:MatDialog){}\r\n  form = new FormGroup({  \r\n    username: new FormControl('', Validators.required),  \r\n    password: new FormControl('', Validators.required),\r\n    // submit: new FormControl()\r\n  });\r\n\r\n  register(){\r\n    const configDialog=new MatDialogConfig();\r\n    configDialog.backdropClass=\"backGround\";\r\n    // configDialog.width='700px';\r\n    // configDialog.height='400px';\r\n    this.dialog.open(RegisterComponent ,configDialog);\r\n  }\r\n  get username() {  \r\n    return this.form.get('username');  \r\n  } \r\n  get password() {  \r\n    return this.form.get('password');  \r\n  } \r\n\r\n  registerForm = new FormGroup({  \r\n    userID: new FormControl('', Validators.required),\r\n    firstname: new FormControl('', Validators.required),  \r\n    lastname: new FormControl('', Validators.required),\r\n    email: new FormControl('', Validators.required),\r\n    officeID: new FormControl('', Validators.required),\r\n    // submit: new FormControl()\r\n  });\r\n  get userID() {  \r\n    return this.registerForm.get('userID');  \r\n  } \r\n  get firstname() {  \r\n    return this.registerForm.get('firstname');  \r\n  } \r\n  get lastname() {  \r\n    return this.registerForm.get('lastname');  \r\n  } \r\n  get email() {  \r\n    return this.registerForm.get('email');  \r\n  } \r\n  get officeID() {  \r\n    return this.registerForm.get('officeID');  \r\n  } \r\n  \r\n  //lstcomments:Comments[];\r\n  users:User[];\r\n  myForm = \"login\";\r\n  tab:string;\r\n  ngOnInit()\r\n  {\r\n    //this._router.navigate(['dashboard']);\r\n    this.tab = \"Register\";\r\n    this.myForm = \"login\";\r\n    // this._apiService.getcomments()\r\n    // .subscribe\r\n    // (\r\n    //   data=>\r\n    //   {\r\n    //       this.lstcomments = data;//typecast data to list of comments \r\n    //       console.log(this.lstcomments);\r\n    //   }\r\n    // )\r\n\r\n    this._apiService.getUsers()\r\n    .subscribe\r\n    (\r\n      data=>\r\n      {\r\n          this.users = data;//typecast data to list of comments \r\n          console.log(this.users);\r\n      }\r\n    )\r\n   \r\n  }\r\n  \r\n  switch()\r\n  {\r\n    if(this.myForm == \"login\")\r\n    {\r\n      this.myForm = \"register\";\r\n      this.tab = \"Login\";\r\n    }\r\n    else if(this.myForm == \"register\")\r\n    {\r\n      this.myForm = \"login\";\r\n      this.tab = \"Register\";\r\n    }\r\n  }\r\n  _username:string;\r\n  _password:string;\r\n  _match:boolean;\r\n  _exist = false;\r\n  _admin:string\r\n  buttonLogin = \"\";\r\n  buttonReg = \"\";\r\n\r\n  onSubmit() \r\n  {\r\n    // TODO: Use EventEmitter with form value\r\n    console.warn(this.form.get('username').value);\r\n    console.warn(this.form.value);\r\n    this._username = this.form.get('username').value;\r\n    this._password = this.form.get('password').value;\r\n\r\n    for(let i = 0; i < this.users.length; i++) \r\n    {\r\n      \r\n      if(this.users[i].EmpEmail == this._username)\r\n      {\r\n        console.log(\"Found\");\r\n        if(this.users[i].EmpPassword == this._password)\r\n        {\r\n          console.log(\"Passwords match\");\r\n          this._match = true;\r\n          localStorage.setItem('loggedIn', \"true\");\r\n          localStorage.setItem('username',this.users[i].FirstName + \" \" + this.users[i].LastName);\r\n          if(this.users[i].isAdmin)\r\n          {\r\n            this._admin = \"true\";\r\n          }\r\n          else\r\n          {\r\n            this._admin = \"false\";\r\n          }\r\n          //this._admin = <string><any>this.users[i].isAdmin;\r\n          localStorage.setItem('admin',this._admin)\r\n          console.log(localStorage.getItem('admin'));\r\n          this._router.navigate(['dashboard']);\r\n        }\r\n        else\r\n        {\r\n          console.log(\"Wrong password!\");\r\n          this._match = false;\r\n          this.password.reset();\r\n          //this._router.navigate([`dashboard`]);\r\n        }\r\n      }\r\n    }\r\n    this.buttonLogin = \"clicked\";\r\n  }\r\n\r\n  // onRegister()\r\n  // {\r\n    \r\n   \r\n  //   for(let i = 0; i < this.users.length; i++) \r\n  //   {\r\n      \r\n  //     if(this.users[i].userID == this.registerForm.get('userID').value)\r\n  //     {\r\n  //       this._exist = true;\r\n  //     }\r\n  //   }\r\n\r\n  //   if(!this._exist)\r\n  //   {\r\n  //     var formData=new User();\r\n  //       formData.userID=this.registerForm.get('userID').value;\r\n  //       formData.FirstName=this.registerForm.get('firstname').value;\r\n  //       formData.LastName=this.registerForm.get('lastname').value;\r\n  //       formData.Email=this.registerForm.get('email').value;\r\n  //       formData.officeRoomID=this.registerForm.get('officeID').value;\r\n        \r\n\r\n  //       this._apiService.registerUser(formData)\r\n  //       .subscribe(\r\n  //         data=>{\r\n  //           console.log('Response post', data);\r\n  //         }\r\n  //       );\r\n         \r\n  //       this._router.navigate(['dashboard']);\r\n  //   }\r\n  //   this.buttonReg =\"clicked\";\r\n  // }\r\n\r\n}\r\n","<!-- <body> -->\r\n <!-- <section id=\"cover\" class=\"min-vh-100\"> -->\r\n   <h1>Room Booking Manager</h1>\r\n    <div class=\"wrapper\">\r\n      <!-- <div class=\"row text-white\"> -->\r\n        \r\n        <div id=\"formContent\" class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\" [ngSwitch]=\"myForm\">\r\n          <div *ngSwitchCase=\"'login'\">\r\n            <!-- <div class=\"px-2\"> -->\r\n              <h2 id=\"lable\">Log in</h2>\r\n              <form  [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n                <mat-form-field color=\"accent\" class=\"field\">\r\n                  <mat-label>email</mat-label>\r\n                  <input formControlName=\"username\" matInput required>\r\n                  <!-- mat-error is for validation -->\r\n                  <mat-error *ngIf=\"form.get('username').touched && form.get('username').invalid\">\r\n                    email is <strong>required</strong>\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              <br/>\r\n                <mat-form-field color=\"accent\" class=\"field\">\r\n                  <mat-label>password</mat-label>\r\n                  <input formControlName=\"password\" matInput required [type]=\"hide ? 'password' : 'text'\">\r\n                  <mat-error *ngIf=\"form.get('password').touched && form.get('password').invalid\">\r\n                    Password is <strong>required</strong>\r\n                  </mat-error>\r\n                  \r\n                  <button id=\"pbutton\"  mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                  <mat-icon id=\"pIcon\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  </button>\r\n                  \r\n                </mat-form-field>\r\n                <br/>\r\n                <a href=\"#\" id=\"forgot\">Forgot your password?</a>\r\n              <div class=\"form-group\" >\r\n                <button id=\"login\" class=\"btn btn-primary\" [disabled]=\"form.get('username').invalid || form.get('password').invalid\" type=\"submit\" >Login</button><br><br>\r\n                <p *ngIf=\"buttonLogin != '' && !_match\" class=\"alert alert-danger\"> \r\n                  Invalid Username or Password !              \r\n                </p> \r\n               <p id=\"accountLink\">don't have an account? <a id=\"registerlink\"   (click)=\"register()\">{{tab}}</a></p> \r\n              </div>\r\n             \r\n              </form>\r\n            <!-- </div> -->\r\n            \r\n          </div>\r\n          <div *ngSwitchCase=\"'register'\">\r\n            <!-- <div class=\"px-2\"> -->\r\n              <form  [formGroup]=\"registerForm\" >\r\n                <div class=\"form-row\">  \r\n                  <div class=\"form-group col-md-6\">  \r\n                    <label for=\"firstname\">First Name</label>  \r\n                    <input id=\"firstname\" type=\"text\" placeholder=\"First Name\" formControlName=\"firstname\">\r\n                    <p *ngIf=\"registerForm.get('firstname').touched && registerForm.get('firstname').invalid\" style=\"color: red;\">  \r\n                      First Name is Required!             \r\n                    </p>  \r\n                  </div>\r\n                  <div class=\"form-group col-md-6\">  \r\n                    <label for=\"lastname\">Last Name</label>  \r\n                    <input id=\"lastname\" type=\"text\" placeholder=\"Last Name\" formControlName=\"lastname\">\r\n                    <p *ngIf=\"registerForm.get('lastname').touched && registerForm.get('lastname').invalid\" style=\"color: red;\">  \r\n                      Last Name is Required!             \r\n                    </p>  \r\n                  </div> \r\n                  <div class=\"form-group col-md-6\">  \r\n                    <label for=\"userID\">User I.D</label>  \r\n                    <input id=\"userID\" type=\"text\" placeholder=\"202010\" formControlName=\"userID\">\r\n                    <p *ngIf=\"registerForm.get('userID').touched && registerForm.get('userID').invalid\" style=\"color: red;\">  \r\n                      User I.D is Required!             \r\n                    </p>  \r\n                  </div> \r\n                  <div class=\"form-group col-md-6\">  \r\n                    <label for=\"officeID\">Office Room No.</label>  \r\n                    <input id=\"officeID\" type=\"text\" placeholder=\"1\" formControlName=\"officeID\">\r\n                    <p *ngIf=\"registerForm.get('officeID').touched && registerForm.get('officeID').invalid\" style=\"color: red;\">  \r\n                      Office Room I.D is Required!             \r\n                    </p>\r\n                  </div>  \r\n                  <div class=\"form-group col-md-12\">  \r\n                    <label for=\"email\">Email</label><br>\r\n                    <input id=\"email\" type=\"text\" placeholder=\"user@manager\" formControlName=\"email\">\r\n                    <p *ngIf=\"registerForm.get('email').touched && registerForm.get('email').invalid\" style=\"color: red;\">  \r\n                      Email is Required!             \r\n                    </p>  \r\n                  </div>\r\n                  <div class=\"form-group col-md-12\">\r\n                    <button class=\"btn btn-primary\" [disabled]=\"registerForm.get('firstname').invalid || registerForm.get('lastname').invalid || registerForm.get('email').invalid || registerForm.get('officeID').invalid\" type=\"submit\" >Submit</button><br><br>\r\n                    <p *ngIf=\"buttonReg != '' && _exist\" class=\"alert alert-danger\"> \r\n                    User I.D already exists!           \r\n                    </p> \r\n                  </div>\r\n                </div>\r\n              </form>\r\n            <!-- </div> -->\r\n          </div>\r\n        </div>\r\n      <!-- </div> -->\r\n    </div>\r\n  <!-- </section> -->\r\n<!-- </body> -->\r\n  ","import { BrowserModule } from '@angular/platform-browser'\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatDialogModule} from '@angular/material/dialog';\r\nimport { MatSelectModule} from '@angular/material/select';\r\nimport { MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\n// import {c} from '@angular/material/checkbox';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatSelectModule,\r\n    MatDialogModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    MatIconModule,\r\n    MatButtonModule\r\n  ],\r\n  exports:[\r\n    MatSelectModule,\r\n    MatDialogModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    MatIconModule,\r\n    MatButtonModule\r\n  ]\r\n})\r\nexport class MaterialModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { apiService } from '../services/api.service';\r\nimport { Meeting } from '../classes/meeting';\r\n\r\n@Component({\r\n  selector: 'app-meeting-info',\r\n  templateUrl: './meeting-info.component.html',\r\n  styleUrls: ['./meeting-info.component.css']\r\n})\r\nexport class MeetingInfoComponent implements OnInit {\r\n\r\n  constructor(private apiDB: apiService) { }\r\n  listMeetings: Meeting[];\r\n  ngOnInit(): void {\r\n    console.log(\"OnInitial\");\r\n    // if(this.listMeetings == undefined)\r\n    // {\r\n      this.apiDB.getMeetings()\r\n    .subscribe (\r\n      data=>{\r\n       this.listMeetings=data;//type casting into the  form listed in user.ts\r\n       console.log('Response2', data);\r\n      }\r\n\r\n    );\r\n    // }\r\n  }\r\n\r\n  newList: Meeting[] = [];\r\n  myMeetings()\r\n  {\r\n    console.log(\"myMeetings\");\r\n    var user = localStorage.getItem('username');\r\n    // var user = \"kg\";\r\n    console.log(\"Username =\" + user);\r\n    this.newList = [];\r\n    this.listMeetings.forEach(element => {\r\n      console.log(element.Organizer);\r\n      var found = element.Organizer.includes(user)\r\n      console.log(found);\r\n\r\n      if(found)\r\n      {\r\n        this.newList.push(element);\r\n        console.log(this.newList);\r\n        \r\n      }\r\n      this.listMeetings = [];\r\n      this.listMeetings = this.newList;\r\n    });\r\n  }\r\n\r\n}\r\n","<h2>Meeting Information</h2>\r\n<div >\r\n    <div id=\"create\">\r\n        <button class=\"btn btn-primary\" id=\"button-create\" (click)=\"myMeetings()\">View my meetings</button>\r\n    </div>\r\n    <div class=\"table-wrapper-scroll-y table-wrapper-scroll-x my-custom-scrollbar\">\r\n        <table class=\"table center tableRoom\">\r\n            <tr>\r\n                <!-- <th>Meeting ID</th> -->\r\n                <th>Start Time</th>\r\n                <th>End Time</th>\r\n                <th>Organizer</th>\r\n                <th>Participants</th>\r\n                <th>Amenities</th>\r\n                <th>Meeting Room</th>\r\n                <!-- <th>#</th> -->\r\n            </tr>\r\n            <tr *ngFor=\"let meeting of listMeetings\">\r\n                <!-- <td attr.class=\"{{meeting.MeetingID}}\">{{meeting.MeetingID}}</td> -->\r\n                <td attr.class=\"{{meeting.StartTime}}\">{{meeting.StartTime}}</td>\r\n                <td attr.class=\"{{meeting.EndTime}}\">{{meeting.EndTime}}</td>\r\n                <td attr.class=\"{{meeting.Organizer}}\">{{meeting.Organizer}}</td>\r\n                <td attr.class=\"{{meeting.Participants}}\">\r\n                   <ul *ngFor=\"let P of meeting.Participants\"> \r\n                    <li>{{P}}</li>\r\n                   </ul> \r\n                   <!-- {{meeting.Participants}} -->\r\n                </td>\r\n                <td attr.class=\"{{meeting.OriginalAmenity}}\">{{meeting.OriginalAmenity}}</td>\r\n                <td attr.class=\"{{meeting.RoomID}}\">{{meeting.RoomID}}</td>\r\n                <!-- <td></td> -->\r\n                <td>\r\n                    <!-- <button class=\"btn btn-danger\" >Delete</button>&nbsp;\r\n                    <button class=\"btn btn-success\" (click)=\"edit(user.FirstName,user.LastName,user.EmpEmail,user.LocationID,user.EmpPassword)\">Edit</button>\r\n                    <button class=\"btn btn-primary\" >Assign Admin</button>&nbsp; -->\r\n                </td>\r\n            </tr>\r\n        \r\n        </table>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register-confirm',\r\n  templateUrl: './register-confirm.component.html',\r\n  styleUrls: ['./register-confirm.component.css']\r\n})\r\nexport class RegisterConfirmComponent implements OnInit {\r\n\r\n  constructor(private _router: Router,public dialogRef:MatDialogRef<RegisterConfirmComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  submit()\r\n  {\r\n    this._router.navigate(['login']);\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n    <p>You have been registered! You can now log in.</p>\r\n    <button class =\"btn btn-primary\" (click)=\"submit()\">Ok</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport {FormGroup,FormControl,Validators} from '@angular/forms';\r\nimport { apiService } from '../services/api.service';\r\nimport { User } from '../classes/user';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog,MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\r\nimport { RegisterConfirmComponent } from '../register-confirm/register-confirm.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor(private _apiService: apiService, private _router: Router,private dialog:MatDialog,public dialogRef:MatDialogRef<RegisterComponent>) { }\r\n\r\n  floorNumbers: string[] = ['1','2','3','4'];\r\n  buildingList: string[] = ['A','B','C','D'];\r\n  registerForm = new FormGroup({  \r\n    roomNum: new FormControl('', Validators.required),\r\n    firstname: new FormControl('', Validators.required),  \r\n    lastname: new FormControl('', Validators.required),\r\n    email: new FormControl('', Validators.required),\r\n    password: new FormControl('', Validators.required),\r\n    floorNumber:new FormControl(''),\r\n    building:new FormControl(''),\r\n    distance: new FormControl('',[Validators.required,Validators.pattern(\"^[0-9]*$\")])\r\n    // submit: new FormControl()\r\n  });\r\n  get roomID() {  \r\n    return this.registerForm.get('roomID');  \r\n  } \r\n  get firstname() {  \r\n    return this.registerForm.get('firstname');  \r\n  } \r\n  get lastname() {  \r\n    return this.registerForm.get('lastname');  \r\n  } \r\n  get email() {  \r\n    return this.registerForm.get('email');  \r\n  } \r\n  get password() {  \r\n    return this.registerForm.get('password');  \r\n  } \r\n\r\n  users:User[];\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"getting users\");\r\n    this._apiService.getUsers()\r\n    .subscribe\r\n    (\r\n      data=>\r\n      {\r\n          this.users = data;//typecast data to list of comments \r\n          \r\n          console.log(this.users);\r\n      }\r\n    )\r\n  }\r\n\r\n  buttonReg = \"\";\r\n  _exist = false;\r\n  onRegister()\r\n  {\r\n    \r\n    //check if user already exists\r\n    for(let i = 0; i < this.users.length; i++) \r\n    {\r\n      \r\n      if(this.users[i].EmpEmail == this.registerForm.get('email').value)\r\n      {\r\n        this._exist = true;\r\n      }\r\n    }\r\n\r\n    if(!this._exist)\r\n    {\r\n      var formData=new User();\r\n        // \r\n        formData.FirstName=this.registerForm.get('firstname').value;\r\n        formData.LastName=this.registerForm.get('lastname').value;\r\n        formData.EmpEmail=this.registerForm.get('email').value;\r\n        formData.EmpPassword=this.registerForm.get('password').value;\r\n        \r\n        formData.isAdmin = false;\r\n        var rID = (<string><any>this.registerForm.get('floorNumber').value).concat(<string><any>this.registerForm.get('building').value);\r\n        rID = rID.concat(<string><any>this.registerForm.get('roomNum').value);\r\n        var dist = <number><any>this.registerForm.get('distance').value\r\n        formData.LocationID= rID;\r\n        formData.Distance= dist;\r\n        console.log(rID + \"--\" + dist);\r\n\r\n        // console.log(formData.userID + \" - \" + formData.firstName + \" - \" + formData.lastName + \" - \" + formData.email);\r\n        this._apiService.registerUser(formData)\r\n        .subscribe(\r\n          data=>{\r\n            console.log('Response post', data);\r\n            this.done();\r\n          }\r\n        );\r\n        //console.warn(this.RoomInfo.value)\r\n        //console.log(this.RoomInfo.controls['RoomNumber'].value);//individual values\r\n        //from here send json format to the DB\r\n        this.cancel();\r\n    }\r\n    this.buttonReg =\"clicked\";\r\n  }\r\n  cancel(){\r\n    this.dialogRef.close();\r\n  }\r\n  done()\r\n  {\r\n    this.dialogRef.close();\r\n    const editDialog=new MatDialogConfig();\r\n    editDialog.backdropClass=\"backGround\";\r\n    this.dialog.open(RegisterConfirmComponent,editDialog);\r\n  }\r\n}\r\n","\r\n    <!-- <div class=\"px-2\"> class=\"form-row\"-->\r\n      <form  [formGroup]=\"registerForm\" (ngSubmit)=\"onRegister()\">\r\n        <div class=\"wrapper\">  \r\n            <mat-form-field color=\"accent\" class=\"field\">\r\n                <mat-label>First Name</mat-label>\r\n                <input formControlName=\"firstname\" matInput required>\r\n                <!-- mat-error is for validation -->\r\n                <mat-error *ngIf=\"registerForm.get('firstname').touched && registerForm.get('firstname').invalid\">\r\n                    First Name is <strong>required</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n            &nbsp;&nbsp;\r\n            <mat-form-field color=\"accent\" class=\"field\">\r\n                <mat-label>Last Name</mat-label>\r\n                <input formControlName=\"lastname\" matInput required>\r\n                <!-- mat-error is for validation -->\r\n                <mat-error *ngIf=\"registerForm.get('lastname').touched && registerForm.get('lastname').invalid\">\r\n                    Last Name is <strong>required</strong>\r\n                </mat-error>\r\n            </mat-form-field>   \r\n            <br/>\r\n            <mat-form-field color=\"accent\" class=\"field\">\r\n                <mat-label>Email</mat-label>\r\n                <input formControlName=\"email\" matInput required>\r\n                <!-- mat-error is for validation -->\r\n                <mat-error *ngIf=\"registerForm.get('email').touched && registerForm.get('email').invalid\">\r\n                    Email is <strong>required</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n            &nbsp;&nbsp;\r\n            <mat-form-field color=\"accent\" class=\"field\">\r\n                <mat-label>Password</mat-label>\r\n                <input formControlName=\"password\" matInput required>\r\n                <!-- mat-error is for validation -->\r\n                <mat-error *ngIf=\"registerForm.get('password').touched && registerForm.get('password').invalid\">\r\n                    Password is <strong>required</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <br/>\r\n            <mat-form-field color=\"accent\">\r\n                <mat-label>Floor Number</mat-label>\r\n                <mat-select formControlName=\"floorNumber\">\r\n                  <mat-option style=\"color:black\" *ngFor=\"let floors of floorNumbers\" [value]=\"floors\" >{{floors}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            &nbsp;&nbsp;\r\n            <mat-form-field color=\"accent\">\r\n                <mat-label>Building number</mat-label>\r\n                <mat-select formControlName=\"building\">\r\n                  <mat-option style=\"color:black\" *ngFor=\"let buildingNo of buildingList\" [value]=\"buildingNo\" >{{buildingNo}}</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            <br>\r\n            <mat-form-field color=\"accent\" class=\"field\">\r\n                <mat-label>Room/Cubicle Number</mat-label>\r\n                <input formControlName=\"roomNum\" matInput required>\r\n                <!-- mat-error is for validation -->\r\n                <mat-error *ngIf=\"registerForm.get('roomNum').touched && registerForm.get('roomNum').invalid\">\r\n                    Room/Cubicle Number is <strong>required</strong>\r\n                </mat-error>\r\n                <mat-error *ngIf=\"registerForm.controls['roomNum'].hasError('pattern')\">\r\n                    please enter a valid integer\r\n                  </mat-error>\r\n            </mat-form-field>\r\n            &nbsp;&nbsp;\r\n            <mat-form-field color=\"accent\">\r\n                <mat-label>Distance from elevator(in meters)</mat-label>\r\n                <input formControlName=\"distance\" matInput>\r\n                <mat-error *ngIf=\"registerForm.controls['distance'].hasError('required')\">\r\n                  Distance is <strong>required</strong>\r\n                </mat-error>\r\n                <mat-error *ngIf=\"registerForm.controls['distance'].hasError('pattern')\">\r\n                  please enter a valid integer\r\n                </mat-error>\r\n              </mat-form-field>\r\n            <!-- <mat-form-field color=\"accent\" class=\"field\">\r\n                <mat-label>Office Room No.</mat-label>\r\n                <input formControlName=\"officeID\" matInput required>\r\n                <mat-error *ngIf=\"registerForm.get('officeID').touched && registerForm.get('officeID').invalid\">\r\n                    Office Room No. is <strong>required</strong>\r\n                </mat-error>\r\n            </mat-form-field> -->\r\n            <div class=\"form-group col-md-12\">\r\n                <button class=\"btn btn-primary\" [disabled]=\"registerForm.get('firstname').invalid || registerForm.get('lastname').invalid || registerForm.get('email').invalid || registerForm.get('password').invalid\" type=\"submit\" >Submit</button>\r\n                &nbsp;&nbsp;\r\n                <button id=\"cancel\" class =\"btn btn-danger\" (click)=\"cancel()\">cancel</button>\r\n                <br/><br/>\r\n                <p *ngIf=\"buttonReg != '' && _exist\" class=\"alert alert-danger\"> \r\n                    User with username already exists!           \r\n                </p> \r\n            </div>\r\n        </div>\r\n      </form>\r\n    <!-- </div> -->\r\n \r\n","import { MatDialog,MatDialogConfig } from '@angular/material/dialog';\r\nimport { Component, OnInit, AfterViewInit, ViewChild, Renderer2 } from '@angular/core';\r\nimport { apiService } from '../services/api.service';\r\nimport { roomsService } from '../services/rooms.service';\r\nimport {Room} from '../classes/room';\r\nimport { AddMeetingRoomInfoComponent } from '../add-meeting-room-info/add-meeting-room-info.component';\r\nimport { EditMeetingRoomInfoComponent } from '../edit-meeting-room-info/edit-meeting-room-info.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-retrieve-meeting-room-info',\r\n  templateUrl: './retrieve-meeting-room-info.component.html',\r\n  styleUrls: ['./retrieve-meeting-room-info.component.css']\r\n})\r\nexport class RetrieveMeetingRoomInfoComponent implements OnInit,AfterViewInit {\r\n  @ViewChild('data') data;\r\n  constructor(private _router: Router,private apiDB: apiService, private dialog:MatDialog, private renderer2:Renderer2, private mRoom:roomsService) { }\r\n  //constructor(private apiDB: apiService, private renderer2:Renderer2) { }\r\n  \r\n  get getRoom():Room\r\n  {\r\n    return this.mRoom.myRoom;\r\n  }\r\n  set setRoom(_room:Room)\r\n  {\r\n    this.mRoom.myRoom = _room;\r\n  }\r\n  listComments:Room[];\r\n  ngOnInit(): void {\r\n    if(localStorage.getItem('loggedIn') == \"false\")\r\n    {\r\n      //this._router.navigate(['login']);\r\n    }\r\n    this.apiDB.getRooms()\r\n    .subscribe (\r\n      data=>{\r\n       this.listComments=data;//type casting into the  form listed in comments.ts\r\n       console.log('Response2', data);\r\n      }\r\n\r\n    );\r\n  }\r\n  ngAfterViewInit(){\r\n    console.log(this.data.nativeElement);\r\n    //this.renderer2.appendChild(this.data.nativeElement,this.renderer2.createText(\"testing\"));\r\n  }\r\n  edit(id:string,floorNum:number,amenities:string,numParticipants:number,roomName:string,is_External:boolean,Building:number,Whiteboard:boolean,Projector:boolean,Monitor:boolean,is_Available:boolean)\r\n  {\r\n    var formData=new Room();\r\n    formData.RoomID = id;\r\n    formData.FloorNumber = floorNum;\r\n    formData.Amenity = amenities;\r\n    formData.maxSeats = numParticipants;\r\n    formData.RoomName = roomName;\r\n    formData.isExternal = is_External;\r\n    formData.Building = Building;\r\n    formData.Whiteboard = Whiteboard;\r\n    formData.Projector = Projector;\r\n    formData.Monitor = Monitor;\r\n    // formData.isAvailable = is_Available;\r\n    console.log(formData);\r\n    this.setRoom = formData;\r\n    // this.apiDB.getRecord(formData)\r\n    // .subscribe(\r\n    //   data=>{\r\n    //     console.log('Response post', data);\r\n    //   });\r\n        //window.location.reload();\r\n        //this.ngOnInit();\r\n    const editDialog=new MatDialogConfig();\r\n    editDialog.backdropClass=\"backGround\";\r\n    // configDialog.width='700px';\r\n    // configDialog.height='400px';\r\n    this.dialog.open(EditMeetingRoomInfoComponent,editDialog);\r\n  }\r\n  delete(id:string){\r\n    if(confirm(`Are you sure to delete Room number ${id}`)) {\r\n      console.log(\"Implement delete functionality here\");\r\n      var formData=new Room();\r\n      formData.RoomID=id;\r\n      this.apiDB.delete(formData)\r\n      .subscribe(\r\n        data=>{\r\n          console.log('Response post', data);\r\n        });\r\n        //window.location.reload();\r\n        this.ngOnInit();\r\n    }\r\n  }\r\n\r\n  onCreate(){\r\n    const configDialog=new MatDialogConfig();\r\n    configDialog.backdropClass=\"backGround\";\r\n    // configDialog.width='700px';\r\n    // configDialog.height='400px';\r\n    this.dialog.open(AddMeetingRoomInfoComponent,configDialog);\r\n    // window.location.reload();\r\n    this.ngOnInit();\r\n  }\r\n}\r\n","\r\n<h2>Meeting Room Information</h2>\r\n<div #data>\r\n    <div id=\"create\">\r\n        <button class=\"btn btn-primary\" (click)=\"onCreate()\" id=\"button-create\">Add new Room</button>\r\n    </div>\r\n    <div class=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n        <table class=\"table  tableRoom\">\r\n            <tr>\r\n                <th>Room number</th>\r\n                <th>Room Name</th>\r\n                <th>Floor Number</th>\r\n                <th>Amenity</th>\r\n                <th>Number of seats</th>\r\n                <th>#</th>\r\n            </tr>\r\n            <tr *ngFor=\"let com of listComments\">\r\n                <td attr.class=\"{{com.RoomID}}\">{{com.RoomID}}</td>\r\n                <td attr.class=\"{{com.RoomName}}\">{{com.RoomName}}</td>\r\n                <td attr.class=\"{{com.FloorNumber}}\">{{com.FloorNumber}}</td>\r\n                <td attr.class=\"{{com.Amenity}}\">{{com.Amenity}}</td>\r\n                <td attr.class=\"{{com.maxSeats}}\">{{com.maxSeats}}</td>\r\n                <!-- <td></td> -->\r\n                <td>\r\n                    <button class=\"btn btn-danger\" (click)=\"delete(com.RoomID)\">Delete</button>&nbsp;\r\n                    <!-- <button class=\"btn btn-success\" (click)=\"edit(com.RoomID,com.FloorNumber,com.Amenity,com.maxSeats,com.RoomName,com.isExternal,com.Building,com.Whiteboard,com.Projector,com.Monitor,com.isAvailable)\">Edit</button> -->\r\n                </td>\r\n            </tr>\r\n        \r\n        </table>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport {Room} from '../classes/room';\r\nimport { User } from '../classes/user';\r\n\r\n@Injectable()\r\nexport class apiService\r\n{\r\n    constructor(private httpclient: HttpClient){}\r\n    getcomments(): Observable<any>\r\n    {\r\n        let body={\r\n            table:\"Admins\",\r\n            request:\"view\",\r\n            data:\"\"\r\n        };\r\n        return this.httpclient.post(\"http://localhost:65000/\",body); \r\n    }\r\n    getUsers(): Observable<any>\r\n    {\r\n        console.log(\"ts in getusers\");\r\n        let body={\r\n            table:\"EmployeeDetails\",\r\n            request:\"view\",\r\n            data:\"\"\r\n        };\r\n        return this.httpclient.post(\"http://localhost:65000/\",body); \r\n    }\r\n    getRooms(): Observable<any>\r\n    {\r\n        let body={\r\n            table:\"FloorPlan\",\r\n            request:\"view\",\r\n            data:\"\"\r\n        };\r\n        return this.httpclient.post(\"http://localhost:65000/\",body); \r\n    }\r\n    getMeetings(): Observable<any>\r\n    {\r\n        let body={\r\n            table:\"Meetings\",\r\n            request:\"view\",\r\n            data:\"\"\r\n        };\r\n        return this.httpclient.post(\"http://localhost:65000/\",body); \r\n    }\r\n\r\n    post(postedData:Room):Observable<any>\r\n    {\r\n       let obj={\r\n            table:\"FloorPlan\",\r\n            request:\"create\",\r\n            data:postedData\r\n        };\r\n        console.log(\"posted data \",obj);\r\n        return this.httpclient.post(\"http://localhost:65000/\",obj);\r\n    }\r\n    registerUser(postedData:User):Observable<any>\r\n    {\r\n       let obj={\r\n            table:\"EmployeeDetails\",\r\n            request:\"create\",\r\n            data:postedData\r\n        };\r\n        console.log(\"posted data \",obj);\r\n        return this.httpclient.post(\"http://localhost:65000/\",obj);\r\n    }\r\n\r\n    getRecord(postedData:Room):Observable<any>{\r\n\r\n        let obj={\r\n            table:\"FloorPlan\",\r\n            request:\"read\",\r\n            data:postedData\r\n        };\r\n        return this.httpclient.post(\"http://localhost:65000/\",obj);\r\n    }\r\n    delete(postedData:Room):Observable<any>{\r\n\r\n        let obj={\r\n            table:\"FloorPlan\",\r\n            request:\"delete\",\r\n            data:postedData\r\n        };\r\n        return this.httpclient.post(\"http://localhost:65000/\",obj);\r\n    }\r\n\r\n    deleteUser(postedData:User):Observable<any>{\r\n\r\n        let obj={\r\n            table:\"EmployeeDetails\",\r\n            request:\"delete\",\r\n            data:postedData\r\n        };\r\n        return this.httpclient.post(\"http://localhost:65000/\",obj);\r\n    }\r\n\r\n    updateRoom(postedData:Room):Observable<any>{\r\n        \r\n        let obj={\r\n            table:\"FloorPlan\",\r\n            request:\"update\",\r\n            data:postedData\r\n        };\r\n        return this.httpclient.post(\"http://localhost:65000/\",obj);\r\n    }\r\n\r\n    updateEmployee(postedData:User):Observable<any>{\r\n        \r\n        let obj={\r\n            table:\"EmployeeDetails\",\r\n            request:\"update\",\r\n            data:postedData\r\n        };\r\n        return this.httpclient.post(\"http://localhost:65000/\",obj);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport {User} from '../classes/user';\r\n\r\n@Injectable()\r\nexport class empService\r\n{\r\n    myUser: User;\r\n    constructor(){}\r\n}","import { Injectable } from '@angular/core';\r\nimport {Room} from '../classes/room';\r\n\r\n@Injectable()\r\nexport class roomsService\r\n{\r\n    myRoom: Room;\r\n    constructor(){}\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}